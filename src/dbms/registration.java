
package dbms;


import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIDefaults;
import javax.swing.UIManager;
import javax.swing.border.Border;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.ColorUIResource;



public class registration extends javax.swing.JFrame {

    String image_path = null;
 
    public registration() {
        initComponents();
        
        
        this.setLocationRelativeTo(null);
        
       // focus tranparent color 
        UIDefaults defaults = UIManager.getLookAndFeelDefaults();
        defaults.put("Button.focus", new ColorUIResource(new Color(0,0,0,0)));
        
        ButtonGroup bg = new ButtonGroup();
         
        bg.add(radio_male);
        bg.add(radio_female);
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField2 = new javax.swing.JPasswordField();
        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        registerbutton = new javax.swing.JButton();
        fnametf = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        unametf = new javax.swing.JTextField();
        cpasstf = new javax.swing.JPasswordField();
        mnotf = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        radio_male = new javax.swing.JRadioButton();
        radio_female = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        passtf = new javax.swing.JPasswordField();
        imagebtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        loginlevel = new javax.swing.JLabel();
        label_photo = new javax.swing.JLabel();
        img_path = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        minimize_1 = new javax.swing.JLabel();
        close_2 = new javax.swing.JLabel();

        jPasswordField2.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jPanel3.setBackground(new java.awt.Color(0, 51, 51));

        registerbutton.setBackground(new java.awt.Color(255, 102, 102));
        registerbutton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        registerbutton.setForeground(new java.awt.Color(255, 255, 255));
        registerbutton.setText("Register");
        registerbutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        registerbutton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        registerbutton.setRequestFocusEnabled(false);
        registerbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerbuttonActionPerformed(evt);
            }
        });

        fnametf.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        fnametf.setBorder(null);
        fnametf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fnametfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fnametfFocusLost(evt);
            }
        });
        fnametf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fnametfKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Username");

        unametf.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        unametf.setBorder(null);
        unametf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                unametfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                unametfFocusLost(evt);
            }
        });
        unametf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unametfActionPerformed(evt);
            }
        });
        unametf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                unametfKeyPressed(evt);
            }
        });

        cpasstf.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cpasstf.setBorder(null);
        cpasstf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cpasstfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cpasstfFocusLost(evt);
            }
        });
        cpasstf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpasstfActionPerformed(evt);
            }
        });
        cpasstf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cpasstfKeyPressed(evt);
            }
        });

        mnotf.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        mnotf.setBorder(null);
        mnotf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mnotfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                mnotfFocusLost(evt);
            }
        });
        mnotf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnotfActionPerformed(evt);
            }
        });
        mnotf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mnotfKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mnotfKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Paasword");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Confirm Password");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Gender");

        radio_male.setBackground(new java.awt.Color(102, 102, 102));
        radio_male.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radio_male.setForeground(new java.awt.Color(255, 255, 255));
        radio_male.setText(" Male");
        radio_male.setBorder(null);
        radio_male.setContentAreaFilled(false);
        radio_male.setFocusPainted(false);
        radio_male.setRequestFocusEnabled(false);
        radio_male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_maleActionPerformed(evt);
            }
        });
        radio_male.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                radio_maleKeyPressed(evt);
            }
        });

        radio_female.setBackground(new java.awt.Color(102, 102, 102));
        radio_female.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radio_female.setForeground(new java.awt.Color(255, 255, 255));
        radio_female.setText(" Female");
        radio_female.setBorder(null);
        radio_female.setContentAreaFilled(false);
        radio_female.setFocusPainted(false);
        radio_female.setRequestFocusEnabled(false);
        radio_female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_femaleActionPerformed(evt);
            }
        });
        radio_female.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                radio_femaleKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Full Name");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Image");

        passtf.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        passtf.setBorder(null);
        passtf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passtfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passtfFocusLost(evt);
            }
        });
        passtf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passtfKeyPressed(evt);
            }
        });

        imagebtn.setBackground(new java.awt.Color(0, 51, 51));
        imagebtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        imagebtn.setForeground(new java.awt.Color(153, 153, 153));
        imagebtn.setText("Select Image");
        imagebtn.setBorder(null);
        imagebtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        imagebtn.setMargin(new java.awt.Insets(14, 14, 2, 14));
        imagebtn.setRequestFocusEnabled(false);
        imagebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imagebtnActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Mobile No");

        loginlevel.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        loginlevel.setForeground(new java.awt.Color(255, 255, 255));
        loginlevel.setText("Have Account?? Log In");
        loginlevel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginlevel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginlevelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loginlevelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loginlevelMouseExited(evt);
            }
        });

        img_path.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        img_path.setForeground(new java.awt.Color(255, 255, 255));
        img_path.setFocusable(false);
        img_path.setRequestFocusEnabled(false);
        img_path.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jLabel2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(2, 2, 2))
                    .addComponent(jLabel7)
                    .addComponent(jLabel1))
                .addGap(62, 62, 62)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(unametf, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fnametf, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(mnotf, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passtf, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cpasstf, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(img_path, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(label_photo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(registerbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(loginlevel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(radio_male, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(radio_female))
                            .addComponent(imagebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fnametf, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(unametf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passtf, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(30, 30, 30)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cpasstf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mnotf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)))
                    .addComponent(jLabel2))
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radio_male)
                            .addComponent(radio_female))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(imagebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))))
                .addGap(77, 77, 77)
                .addComponent(loginlevel)
                .addGap(20, 20, 20))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(label_photo, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(img_path, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(registerbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        jPanel4.setBackground(new java.awt.Color(255, 153, 0));
        jPanel4.setToolTipText("");
        jPanel4.setName("Login"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe Print", 1, 25)); // NOI18N
        jLabel3.setText("  Registration");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        minimize_1.setFont(new java.awt.Font("Tahoma", 1, 19)); // NOI18N
        minimize_1.setText(" - ");
        minimize_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        minimize_1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimize_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimize_1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimize_1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimize_1MouseExited(evt);
            }
        });

        close_2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        close_2.setText(" x ");
        close_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        close_2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                close_2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                close_2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                close_2MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(142, 142, 142)
                .addComponent(minimize_1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(close_2)
                .addGap(18, 18, 18))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(minimize_1)
                            .addComponent(close_2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void close_2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close_2MouseExited
        Border label_border=BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black);
        close_2.setBorder(label_border);
        close_2.setForeground(Color.black);
    }//GEN-LAST:event_close_2MouseExited

    private void close_2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close_2MouseEntered
        Border label_border=BorderFactory.createMatteBorder(1, 1, 1, 1, Color.gray);
        close_2.setBorder(label_border);
        close_2.setForeground(Color.gray);
    }//GEN-LAST:event_close_2MouseEntered

    private void close_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close_2MouseClicked

        System.exit(0);
    }//GEN-LAST:event_close_2MouseClicked

    private void minimize_1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimize_1MouseExited
        Border label_border=BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black);
        minimize_1.setBorder(label_border);
        minimize_1.setForeground(Color.black);
    }//GEN-LAST:event_minimize_1MouseExited

    private void minimize_1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimize_1MouseEntered
        Border label_border=BorderFactory.createMatteBorder(1, 1, 1, 1, Color.gray);
        minimize_1.setBorder(label_border);
        minimize_1.setForeground(Color.gray);
    }//GEN-LAST:event_minimize_1MouseEntered

    private void minimize_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimize_1MouseClicked

        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimize_1MouseClicked

    private void loginlevelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginlevelMouseExited

        loginlevel.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_loginlevelMouseExited

    private void loginlevelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginlevelMouseEntered

        loginlevel.setForeground(new Color(255,153,102));
    }//GEN-LAST:event_loginlevelMouseEntered

    private void loginlevelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginlevelMouseClicked

        login log = new login();
        log.setVisible(true);
        log.pack();
        log.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_loginlevelMouseClicked

    private void imagebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imagebtnActionPerformed

        String path = null;

        JFileChooser chooser = new JFileChooser();

        chooser.setCurrentDirectory(new File(System.getProperty("user.home")));

        FileNameExtensionFilter extension = new FileNameExtensionFilter("*images","jpg","png","jpeg");
        chooser.addChoosableFileFilter(extension);

        int filestate = chooser.showSaveDialog(null);

        if(filestate == JFileChooser.APPROVE_OPTION){

            File selectedImage = chooser.getSelectedFile();
            path = selectedImage.getAbsolutePath();

            String img = selectedImage.getName();
            img_path.setText(img);
            img_path.setMaximumSize(new Dimension(110,20));
            img_path.setPreferredSize(new Dimension(30,20));
            img_path.setMinimumSize(new Dimension(30,20));

            label_photo.setIcon(resetImageSize(path,null));

            image_path = path;

        }
    }//GEN-LAST:event_imagebtnActionPerformed

    private void passtfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passtfKeyPressed

        int key = evt.getKeyCode();

        if(key == 10){
            cpasstf.requestFocus();
        }
    }//GEN-LAST:event_passtfKeyPressed

    private void passtfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passtfFocusLost

        Border field_border = BorderFactory.createMatteBorder(1, 7, 1, 1, Color.white);
        passtf.setBorder(field_border);
    }//GEN-LAST:event_passtfFocusLost

    private void passtfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passtfFocusGained

        Border field_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black);
        passtf.setBorder(field_border);
    }//GEN-LAST:event_passtfFocusGained

    private void radio_femaleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_radio_femaleKeyPressed

        int key = evt.getKeyCode();

        if(key == 10){
            radio_female.setSelected(true);
            imagebtn.doClick();

        }
    }//GEN-LAST:event_radio_femaleKeyPressed

    private void radio_femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_femaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_femaleActionPerformed

    private void radio_maleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_radio_maleKeyPressed

        int key = evt.getKeyCode();

        if(key == 10){
            radio_male.setSelected(true);
            imagebtn.doClick();

        }
    }//GEN-LAST:event_radio_maleKeyPressed

    private void radio_maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_maleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_maleActionPerformed

    private void mnotfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mnotfKeyTyped

        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_mnotfKeyTyped

    private void mnotfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mnotfKeyPressed

        int key = evt.getKeyCode();

        if(key == 10){

            radio_male.requestFocus();
        }
    }//GEN-LAST:event_mnotfKeyPressed

    private void mnotfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnotfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnotfActionPerformed

    private void mnotfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mnotfFocusLost

        Border field_border = BorderFactory.createMatteBorder(1, 7, 1, 1, Color.white);
        mnotf.setBorder(field_border);
    }//GEN-LAST:event_mnotfFocusLost

    private void mnotfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mnotfFocusGained

        Border field_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black);
        mnotf.setBorder(field_border);
    }//GEN-LAST:event_mnotfFocusGained

    private void cpasstfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cpasstfKeyPressed

        int key = evt.getKeyCode();

        if(key == 10){
            mnotf.requestFocus();
        }
    }//GEN-LAST:event_cpasstfKeyPressed

    private void cpasstfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpasstfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpasstfActionPerformed

    private void cpasstfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cpasstfFocusLost

        Border field_border = BorderFactory.createMatteBorder(1, 7, 1, 1, Color.white);
        cpasstf.setBorder(field_border);
    }//GEN-LAST:event_cpasstfFocusLost

    private void cpasstfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cpasstfFocusGained

        Border field_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black);
        cpasstf.setBorder(field_border);
    }//GEN-LAST:event_cpasstfFocusGained

    private void unametfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unametfKeyPressed

        int key = evt.getKeyCode();

        if(key == 10){
            passtf.requestFocus();
        }
    }//GEN-LAST:event_unametfKeyPressed

    private void unametfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unametfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unametfActionPerformed

    private void unametfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_unametfFocusLost

        Border field_border = BorderFactory.createMatteBorder(1, 7, 1, 1, Color.white);
        unametf.setBorder(field_border);
    }//GEN-LAST:event_unametfFocusLost

    private void unametfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_unametfFocusGained

        Border field_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black);
        unametf.setBorder(field_border);
    }//GEN-LAST:event_unametfFocusGained

    private void fnametfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fnametfKeyPressed

        int key = evt.getKeyCode();

        if(key == 10){
            unametf.requestFocus();
        }
    }//GEN-LAST:event_fnametfKeyPressed

    private void fnametfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fnametfFocusLost

        Border field_border = BorderFactory.createMatteBorder(1, 7, 1, 1, Color.white);
        fnametf.setBorder(field_border);
    }//GEN-LAST:event_fnametfFocusLost

    private void fnametfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fnametfFocusGained

        Border field_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black);
        fnametf.setBorder(field_border);
    }//GEN-LAST:event_fnametfFocusGained

    private void registerbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerbuttonActionPerformed

        String full_name = fnametf.getText();
        String username = unametf.getText();
        String password = String.valueOf(passtf.getPassword());
        String cpassword = String.valueOf(cpasstf.getPassword());
        String phone = mnotf.getText();
        String gender = "Male";

        if(radio_female.isSelected())
        {
            gender = "Female";
        }

        if(verifyfield()){

            if(!checkusername(username)){

                PreparedStatement ps;
                ResultSet rs = null;

                String registerUserQuery = "INSERT INTO `user`(`full_name`, `username`, `password`, `phone`, `gender`, `image`) VALUES (?,?,?,?,?,?)";

                try {
                    ps = my_con.getConnection().prepareStatement(registerUserQuery);

                    ps.setString(1, full_name);
                    ps.setString(2, username);
                    ps.setString(3, password);
                    ps.setString(4, phone);
                    ps.setString(5, gender);

                    try {
                        if(image_path != null){

                            InputStream images;

                            images = new FileInputStream(new File(image_path));

                            ps.setBlob(6, images);
                        }

                        else{
                            ps.setNull(6, java.sql.Types.NULL);
                        }

                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(registration.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    if(ps.executeUpdate() != 0){

                        JOptionPane.showMessageDialog(null,"\nAccount Successfully Created\n\n","Account Created",1);

                        int cnf = JOptionPane.showConfirmDialog(null, "    Do You Want To Login Now ?    \n\n","Go For Login",JOptionPane.YES_NO_OPTION);

                        if(cnf == 0){
                            login lon = new login();
                            lon.setVisible(true);
                            lon.pack();
                            lon.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                            this.dispose();
                        }
                        else{
                            int inf = JOptionPane.showConfirmDialog(null, "    Want To Exit Registration ?     \n\n","Exit",JOptionPane.YES_NO_OPTION);
                            if(inf == 0){
                                System.exit(0);
                            }
                            else{
                                registration form = new registration();
                                form.setVisible(true);
                                form.pack();
                                form.setLocationRelativeTo(null);

                                /// this.dispose();
                            }

                        }
                        /// JOptionPane.showMessageDialog(null,"Account Successfully Created.","Account Created",1);
                    }
                    else{

                        JOptionPane.showMessageDialog(null,"Error: Check Your Information.","Error",3);

                    }

                }
                catch (SQLException ex) {
                    Logger.getLogger(registration.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }
    }//GEN-LAST:event_registerbuttonActionPerformed
    
    public boolean verifyfield(){
        
        String full_name = fnametf.getText();
        String username = unametf.getText();
        String password = String.valueOf(passtf.getPassword());
        String cpassword = String.valueOf(cpasstf.getPassword());
        String phone = mnotf.getText();
        
        if(full_name.trim().equals("") || username.trim().equals("") || password.trim().equals("") || cpassword.trim().equals("") || image_path == null){
            
            //JOptionPane.showMessageDialog(null, "Check Out Empty Field","Empty Field",3);
            if(full_name.trim().equals("")){
                JOptionPane.showMessageDialog(null, "Empty :   Full Name","Empty Field",3);
                fnametf.requestFocus();
            }
            else if(username.trim().equals("")){
                 JOptionPane.showMessageDialog(null, "Empty :   Username","Empty Field",3);
                unametf.requestFocus();
            }
            else if(password.trim().equals("")){
                 JOptionPane.showMessageDialog(null, "Empty :   Password","Empty Field",3);
                passtf.requestFocus();
            }
            else if(cpassword.trim().equals("")){
                 JOptionPane.showMessageDialog(null, "Empty :   Password","Empty Field",3);
                cpasstf.requestFocus();
            }
            else if(image_path == null){
                JOptionPane.showMessageDialog(null, "Select Image","Empty Field",3);
            }
            
            return false;
        } 
        
        else if(!password.equals(cpassword)){
            
            JOptionPane.showMessageDialog(null,"Password Doesn't Match","Retype Password",3);
            cpasstf.setText("");
            cpasstf.requestFocus();
            
            return false;
            
        }
        
        
        else {
                
                return true;
                }
        
        
    
}
    
    public boolean checkusername(String username){
        
        PreparedStatement st;
        ResultSet rs;
        
        boolean username_found = false;
        
        String query = "SELECT * FROM `user` WHERE `username` = ? ";
        
        try {
            st = my_con.getConnection().prepareStatement(query);
            
            st.setString(1, username);
            rs = st.executeQuery();
            
            
            if(rs.next()){
                username_found = true;
                
                JOptionPane.showMessageDialog(null, "User Name Already Taken. Try Another.","Username Exists",3); 
                unametf.setText("");
                unametf.requestFocus();
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(registration.class.getName()).log(Level.SEVERE, null, ex);
        }
        return username_found;
        
        
    }
    
    public ImageIcon resetImageSize(String path,byte[] photo){
        
        ImageIcon myphoto = null;
        
        if(path !=null){
            myphoto = new ImageIcon(path);
            
        }
        else{
            myphoto = new ImageIcon(photo);
        }
        Image img = myphoto.getImage();
        
        Image img1=img.getScaledInstance(label_photo.getWidth(), label_photo.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon ph = new ImageIcon(img1);
       
        return ph;
    }
 
    
    
    
    public static void main(String args[]) {
      
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel close_2;
    private javax.swing.JPasswordField cpasstf;
    private javax.swing.JTextField fnametf;
    private javax.swing.JButton imagebtn;
    private javax.swing.JLabel img_path;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JLabel label_photo;
    private javax.swing.JLabel loginlevel;
    private javax.swing.JLabel minimize_1;
    private javax.swing.JTextField mnotf;
    private javax.swing.JPasswordField passtf;
    private javax.swing.JRadioButton radio_female;
    private javax.swing.JRadioButton radio_male;
    private javax.swing.JButton registerbutton;
    private javax.swing.JTextField unametf;
    // End of variables declaration//GEN-END:variables

    private Icon ResizeImage(String path) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
